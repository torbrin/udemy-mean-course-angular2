{"version":3,"sources":["events/event-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAiBA;gBASI,4BAAqB,aAA2B;oBAA3B,kBAAa,GAAb,aAAa,CAAc;oBARhD,cAAS,GAAW,YAAY,CAAC;oBACjC,eAAU,GAAW,EAAE,CAAC;oBACxB,gBAAW,GAAW,CAAC,CAAC;oBACxB,cAAS,GAAY,KAAK,CAAC;gBAKyB,CAAC;gBAErD,wCAAW,GAAX;oBACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;gBACrC,CAAC;gBAED,qCAAQ,GAAR;oBAAA,iBAIC;oBAHG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;yBACzB,SAAS,CAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,EACzC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;gBACjD,CAAC;gBAED,4CAAe,GAAf,UAAgB,OAAe;oBAC3B,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,OAAO,CAAC;gBAC9C,CAAC;gBA9BL;oBAAC,gBAAS,CAAC;wBACP,WAAW,EAAE,sCAAsC;wBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;wBAClD,KAAK,EAAE,CAAC,mCAAe,CAAC;wBACxB,UAAU,EAAE,CAAC,iCAAc,EAAE,0BAAiB,CAAC;qBAClD,CAAC;;sCAAA;gBA0BF,yBAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBD,mDAwBC,CAAA","file":"event-list.component.js","sourcesContent":["/**\r\n * Created by ewalspr on 6/16/2017.\r\n */\r\nimport { Component, OnInit } from 'angular2/core';\r\nimport { IEvent } from './event';\r\nimport { EventFilterPipe } from './event-filter.pipe';\r\nimport { ThumbComponent } from '../shared/thumbs.component';\r\nimport { EventService } from './event.service';\r\nimport { ROUTER_DIRECTIVES } from 'angular2/router';\r\n\r\n@Component({\r\n    templateUrl: 'app/events/event-list.component.html',\r\n    styleUrls: ['app/events/event-list.component.css'],\r\n    pipes: [EventFilterPipe],\r\n    directives: [ThumbComponent, ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class EventListComponent implements OnInit {\r\n    pageTitle: string = 'Event List';\r\n    imageWidth: number = 50;\r\n    imageMargin: number = 2;\r\n    showImage: boolean = false;\r\n    searchCriteria: string;\r\n    events: IEvent[];\r\n    errorMessage: string;\r\n\r\n    constructor( private _eventService: EventService ) {}\r\n\r\n    toggleImage(): void {\r\n        this.showImage = !this.showImage;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._eventService.getEvents()\r\n            .subscribe(events => this.events = events,\r\n            error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    onRatingClicked(message: string): void {\r\n        this.pageTitle = 'Event List: ' + message;\r\n    }\r\n}\r\n"]}